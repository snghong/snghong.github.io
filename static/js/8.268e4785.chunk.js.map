{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Badge.js","components/projects/ProjectCard.jsx"],"names":["classnames__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","classnames__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__","Col","props","ref","className","colProps","as","Component","bsPrefix","spans","_ref","Object","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","concat","push","useCol","length","displayName","__webpack_exports__","_restart_ui_Button__WEBPACK_IMPORTED_MODULE_2__","_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__","Button","variant","size","active","disabled","prefix","buttonProps","tagName","href","CardBody","react","ThemeProvider","jsx_runtime","classnames_default","esm_CardBody","CardFooter","esm_CardFooter","CardHeader","contextValue","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","esm_CardHeader","CardImg","esm_CardImg","CardImgOverlay","esm_CardImgOverlay","CardLink","esm_CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","esm_CardSubtitle","CardText","esm_CardText","DivStyledAsH5","CardTitle","esm_CardTitle","Card","bg","text","border","body","esm_Card","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Badge","pill","esm_Badge","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","_project$links","theme","useContext","ThemeContext","project","React","createElement","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","src","image","title","ReactMarkdown","parseBodyText","bodyText","links","map","link","key","onClick","window","open","tags","cardFooterBackground","tag","bsPrimaryVariant"],"mappings":"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","file":"static/js/8.268e4785.chunk.js","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol(_ref) {\n  let {\n    as,\n    bsPrefix,\n    className,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? \"-\".concat(brkPoint) : '';\n    if (span) spans.push(span === true ? \"\".concat(bsPrefix).concat(infix) : \"\".concat(bsPrefix).concat(infix, \"-\").concat(span));\n    if (order != null) classes.push(\"order\".concat(infix, \"-\").concat(order));\n    if (offset != null) classes.push(\"offset\".concat(infix, \"-\").concat(offset));\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as,\n    bsPrefix,\n    variant = 'primary',\n    size,\n    active = false,\n    disabled = false,\n    className,\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && \"\".concat(prefix, \"-\").concat(variant), size && \"\".concat(prefix, \"-\").concat(size), props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    variant,\n    as: Component = 'img',\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? \"\".concat(prefix, \"-\").concat(variant) : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'a',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = DivStyledAsH6,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = 'p',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    bsPrefix,\n    as: Component = DivStyledAsH5,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    bg,\n    text,\n    border,\n    body = false,\n    children,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && \"bg-\".concat(bg), text && \"text-\".concat(text), border && \"border-\".concat(border)),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    bg = 'primary',\n    pill = false,\n    text,\n    className,\n    as: Component = 'span',\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && \"rounded-pill\", text && \"text-\".concat(text), bg && \"bg-\".concat(bg))\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n"],"sourceRoot":""}